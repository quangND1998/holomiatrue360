<krpano 
    debugmode="true"
    idletime="60"
>
    
   
    <!-- 
                     _           _     _____     _ 
     _ __  _ __ ___ (_) ___  ___| |_  |___ /  __| |
    | '_ \| '__/ _ \| |/ _ \/ __| __|   |_ \ / _` |
    | |_) | | | (_) | |  __/ (__| |_   ___) | (_| |
    | .__/|_|  \___// |\___|\___|\__| |____/ \__,_|
    |_|           |__/                             
    
    -->
    <include url="project3d.xml" />


    
    <!--

     
                       _             _             
     _ __   __ ___   _(_) __ _  __ _| |_ ___  _ __ 
    | '_ \ / _` \ \ / / |/ _` |/ _` | __/ _ \| '__|
    | | | | (_| |\ V /| | (_| | (_| | || (_) | |   
    |_| |_|\__,_| \_/ |_|\__, |\__,_|\__\___/|_|   
                         |___/                    
              

    leftkey                -> 65                            // A this is the key code that triggers the action
    rightkey               -> 68                            // D this is the key code that triggers the action
    forwardkey             -> 87                            // W this is the key code that triggers the action
    backwardkey            -> 83                            // S this is the key code that triggers the action
    upkey                  -> 81                            // Q this is the key code that triggers the action
    downkey                -> 69                            // E this is the key code that triggers the action
    angletolerance         -> 60                            // this is the angle used to poroject the cone that checks which scenes are on the sight of the user
    hotspotvisibility      -> scene                         // model | scene -> that attribute indicates whether I check against all hotspots in the model or just those visible from the pano
    notfoundmove           -> 10                            // the amount of move that it will perform when no image is found in specific direction
    notfoundtime           -> 0.3                           // the amount of time that it will be used to perform the move when no image is found
    navigationmode         -> jumping                       // walking | jumping we can have those 2 types of navigation mode, we could even provide a method to dynamically cahnge the method
    navigationclick        -> true                          // allow to make click on the screen to navigate
    navigationspeed        -> 100                           // this is the speed that user will be moving around when navigation method is used
    walkingspeed           -> 0.1                           // this is the speed that user will be moving around when walking
    walkingfriction        -> 0.9                           // this is the friction applied while user will be moving around when walking
    walkratiochange        -> 0.8                           // define in which point of the distance the transition to next pano is performed, values range from 0-1, 0.8 means we should be 80% more far from the current pano to the shortest to change
    walktransition         -> true                          // this attribute, defines whether when walking (only in walk mode), the plugin need to perform a view transition to the position of the new found scene, or just keep the current position.
    loadsceneflags         -> MERGE|KEEPVIEW|KEEPMOVING     // the flags used to perform loadscene
    loadscenevars          -> null                          // the vars used to perform loadscene
    loadsceneblend         -> BLEND                         // the blend used to perform loadscene
    loadsceneblendtime     -> null                          // the blend time used to perform loadscene
    modeReturn             -> false                         // By using this mode the plugin will not perform any loadscene, just return to specific var the name of the scene
    returnaAction           -> null                         // the krpano action that will be called passing scene name and distance as arguments
    returnVRAction         -> null                          // the krpano action that will be called passing scene name and distance as arguments when user is in VR mode
    returnNotFoundAction   -> null                          // the krpano action that will be called when non scene is found while jumping
    returnNotFoundVRAction -> null                          // the krpano action that will be called when non scene is found while jumping in VR mode    
    depthmapuse            -> true                          // this attribute is for telling the plugin to perform a transition from scene 2 scene or just make a simple loadscene with zoom, so when we do not have depthmap is going to make nice transitions
    hapticfeedback         -> true                          // this attribute let us use the haptic feedback on the controllers to inform the user about if the plugin found or not a new scene after clicking on screen, not used in returnMode
    
    floorspots             -> false                           // show hotspots on the ground, used when no geometry is drawn in the model
    floortooltip           -> false                           // show tooltips when over floor hotspots
    floorStyleSize         -> 20                              // defines the size of the hotspot       
    floorStyleBorder       -> 3                               // defines the thickness of the border           
    floorStyleAlpha        -> 0.6                             // defines the global alpha of the hotspot       
    floorStyleBordercolor  -> 0x000000                        // color of the border                       
    floorStyleCirclecolor  -> 0xfafafa                        // color of the inner circle      
    


    modeReturn = "true"
    returnAction = "sceneFound"
    returnNotFoundAction = "sceneNotFound"

    <action name="sceneFound" > 
        debug('we have found %1 at a distance of %2'); 
        loadscene(%1, null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.5)); 
        set(events.onviewloaded, null); 
        set(events.onkeydown, stoptween(view.tx|view.ty|view.tz);set(events.onkeydown,null); ); 
        tween(view.tx|view.ty|view.tz, calc('' + image.ox + '|' + image.oy + '|' + image.oz), 2, default, set(events.onkeydown,null);
    </action> 

    <action name="sceneFoundSpeed" > 
        debug('we have found %1 at a distance of %2'); set(distance,%2); set(speed,10); 
        calc(transitionTime,distance / speed); 
        loadscene(%1, null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.5)); 
        set(events.onviewloaded, null); 
        set(events.onkeydown, stoptween(view.tx|view.ty|view.tz);set(events.onkeydown,null); ); 
        tween(view.tx|view.ty|view.tz, calc('' + image.ox + '|' + image.oy + '|' + image.oz), get(transitionTime), default, set(events.onkeydown,null);
    </action>

    <action name="sceneNotFound" > 
        txtsplit(%1,'|',p0x,p0z,p1x,p1z); 
        debug('no scene was found, current location is x:', p0x,' z:',p0z,' and click point is x:',p1x,' z:', p1z); 
        tween(view.tx|view.tz, calc(p1x + '|' + p1z) ,0.3, default,tween(view.tx|view.tz, calc( p0x + '|' + p0z) ,0.3, default));
    </action>
    
    -->

    <action autorun="preinit" type="Javascript"><![CDATA[
        krpano.navPlugPan = [{"qu":0,"ti":0,"height":100,"ga":[12,10,1,9,11,13,2,6,14,3,7,4,15,8,5]},{"qu":1,"ti":0,"height":100,"ga":[0,9,2,6,10,12,3,7,11,4,8,13,5,14,15]},{"qu":2,"ti":0,"height":100,"ga":[1,3,9,4,7,6,0,8,5,10,11,12,13,14]},{"qu":3,"ti":0,"height":100,"ga":[4,2,5,8,7,1,9,6,0,10,11,12,13,15]},{"qu":4,"ti":0,"height":100,"ga":[5,3,2,8,9,7,1,6,0,11,10,12,13]},{"qu":5,"ti":0,"height":100,"ga":[4,3,2,8,7,9,1,6,0,12]},{"qu":6,"ti":0,"height":100,"ga":[1,7,2,0,8,9,3,12,10,4,13,11,5,15]},{"qu":7,"ti":0,"height":100,"ga":[8,6,3,2,1,4,5,0,9,10,12,11,13,14,15]},{"qu":8,"ti":0,"height":100,"ga":[7,3,6,2,4,5,1,9,0,10,12,14,15]},{"qu":9,"ti":0,"height":100,"ga":[1,2,0,10,11,3,12,4,6,7,13,5,8,14]},{"qu":10,"ti":0,"height":100,"ga":[0,12,11,9,13,1,14,2,6,15,3,4,7,8]},{"qu":11,"ti":0,"height":100,"ga":[10,9,0,12,1,13,14,2,15,4,3,6,7,5]},{"qu":12,"ti":0,"height":100,"ga":[10,13,0,14,11,1,9,15,6,2,3,7,4,8,5]},{"qu":13,"ti":0,"height":100,"ga":[14,12,10,15,0,11,1,9,6,2,7,4,8]},{"qu":14,"ti":0,"height":100,"ga":[15,13,12,10,11,0,9,1,2,6,3,7,8]},{"qu":15,"ti":0,"height":100,"ga":[14,13,12,10,11,0,1,6,3,7,8]}];
        krpano.navPlugMod = [{"qu":0,"ne":0,"pu":[{"qu":0,"x":0,"y":0,"z":100,"fr":{"x":0,"y":0,"z":0},"cr":{"x":0,"y":0,"z":0},"re":0,"ki":[{"qu":0,"lo":[{"x":34.751210411346044,"y":144.21613823334346,"z":100,"h":13.548064299295786,"v":33.9842582249234,"qu":"a"},{"x":-41.551719870335404,"y":51.74085808996595,"z":100,"h":-38.76702986340343,"v":56.431711428126896,"qu":"b"}]},{"qu":10,"lo":[{"x":-116.3672430268592,"y":14.205568573559493,"z":100,"h":-83.04003632996955,"v":40.46470522228893,"qu":"a"},{"x":-48.44837609760182,"y":35.538932499769665,"z":100,"h":-53.73837775224713,"v":59.000259108286436,"qu":"b"}]}],"we":"0|0|0","dr":0},{"qu":1,"x":5.183693722815279,"y":98.31746298541184,"z":"100.000","fr":{"x":0.6113692396515589,"y":101.60865441402939,"z":0},"cr":{"x":34.751210411346044,"y":144.21613823334346,"z":100},"re":-5.914666547337417,"ki":[{"qu":0,"lo":[{"qu":"a","x":34.751210411346044,"y":144.21613823334346,"z":100},{"qu":"b","x":-31.68167355611218,"y":43.59522159583503,"z":100}]},{"qu":1,"lo":[{"x":-31.746773230353647,"y":43.29308727820194,"z":100,"h":-36.25255472952441,"v":61.77058357892847,"qu":"a"},{"x":-68.89861677712696,"y":121.35174813770678,"z":100,"h":-29.586158743203523,"v":35.62562075416399,"qu":"b"}]},{"qu":6,"lo":[{"x":89.22255303251782,"y":150.83987832642117,"z":100,"h":30.60452996715116,"v":29.70935097982526,"qu":"a"},{"x":135.22742547187238,"y":100.89920708738217,"z":100,"h":53.271740680310316,"v":30.654840927622516,"qu":"b"}]},{"qu":9,"lo":[{"x":35.05854233142271,"y":144.95137575131412,"z":100,"h":13.596681716336183,"v":33.843915425611016,"qu":"a"},{"x":34.76433900882493,"y":97.76117233744841,"z":100,"h":19.575629001867313,"v":43.94327703898182,"qu":"b"}]}],"we":"0|-5.915|0","dr":-5.915},{"qu":2,"x":-37.17031551952369,"y":196.8812124974984,"z":"100.000","fr":{"x":-22.97590266538677,"y":196.7264566894004,"z":0},"cr":{"x":-31.746773230353647,"y":43.29308727820194,"z":100},"re":-5.294099958629447,"ki":[{"qu":1,"lo":[{"qu":"a","x":-31.746773230353647,"y":43.29308727820194,"z":100},{"qu":"b","x":-68.41619539604977,"y":121.15090101053852,"z":100}]},{"qu":2,"lo":[{"x":-68.54320260247437,"y":121.52565388144069,"z":100,"h":-29.42397613168299,"v":35.63022647291093,"qu":"a"},{"x":-85.35286365383612,"y":307.516784395533,"z":100,"h":-15.512267795196232,"v":17.39786273696555,"qu":"b"}]}],"we":"0|-5.294|0","dr":-5.294},{"qu":3,"x":-45.73980250469125,"y":297.26445571873757,"z":"100.000","fr":{"x":-30.05515389475253,"y":294.5077096961994,"z":0},"cr":{"x":-68.54320260247437,"y":121.52565388144069,"z":100},"re":-5.150589000169175,"ki":[{"qu":2,"lo":[{"qu":"a","x":-68.54320260247437,"y":121.52565388144072,"z":100},{"qu":"b","x":-85.12237048225549,"y":308.36932836075687,"z":100}]},{"qu":3,"lo":[{"x":3.5758456020468543,"y":249.98301011742254,"z":100,"h":0.8195232505512942,"v":21.80073113302283,"qu":"a"},{"x":-84.5094144069386,"y":308.1712427290498,"z":100,"h":-15.335160600938181,"v":17.37706045558769,"qu":"b"}]},{"qu":4,"lo":[{"x":-85.23568218747405,"y":308.7390647796044,"z":100,"h":-15.433591940722994,"v":17.339313892067157,"qu":"a"},{"x":-218.74954658706412,"y":296.0406250396968,"z":100,"h":-36.46133717948795,"v":15.1988011307444,"qu":"b"}]}],"we":"0|-5.151|0","dr":-5.151},{"qu":4,"x":-124.85939514683257,"y":330.73665148927364,"z":"100.000","fr":{"x":-122.68819853089113,"y":334.2584979488801,"z":0},"cr":{"x":-85.23568218747405,"y":308.7390647796044,"z":100},"re":-5.232396080940477,"ki":[{"qu":4,"lo":[{"qu":"a","x":-85.23568218747405,"y":308.7390647796044,"z":100},{"qu":"b","x":-218.98609353406655,"y":296.6875774992512,"z":100}]},{"qu":5,"lo":[{"x":-85.66317767916168,"y":308.8051120065396,"z":100,"h":-15.504124667689124,"v":17.33027642308847,"qu":"a"},{"x":-220.04978253264667,"y":296.13871311809015,"z":100,"h":-36.61468229209412,"v":15.165284966035744,"qu":"b"}]}],"we":"0|-5.232|0","dr":-5.232},{"qu":5,"x":-133.08003261315744,"y":414.9207664524814,"z":"100.000","fr":{"x":-122.93382558248393,"y":418.8950255099515,"z":0},"cr":{"x":-85.66317767916168,"y":308.8051120065396,"z":100},"re":-5.373669644888696,"ki":[{"qu":5,"lo":[{"qu":"a","x":-85.66317767916166,"y":308.8051120065396,"z":100},{"qu":"b","x":-219.53331319893084,"y":295.7622842896483,"z":100}]}],"we":"0|-5.374|0","dr":-5.374},{"qu":6,"x":144.66889458008305,"y":140.56465535043185,"z":"100.000","fr":{"x":143.26638459442074,"y":134.742012992029,"z":0},"cr":{"x":89.22255303251782,"y":150.83987832642117,"z":100},"re":-6.088197004800389,"ki":[{"qu":6,"lo":[{"qu":"a","x":89.22255303251782,"y":150.83987832642117,"z":100},{"qu":"b","x":135.80715465218424,"y":100.76567684243172,"z":100}]},{"qu":7,"lo":[{"x":135.9333956309861,"y":100.80766141285707,"z":100,"h":53.439516583867,"v":30.578780272378452,"qu":"a"},{"x":121.8520970431378,"y":231.19345647271416,"z":100,"h":27.791780165463912,"v":20.93904943507294,"qu":"b"}]}],"we":"0|-6.088|0","dr":-6.088},{"qu":7,"x":125.33599174276327,"y":282.2469436590224,"z":"100.000","fr":{"x":148.73434184533113,"y":282.1048039363707,"z":0},"cr":{"x":135.9333956309861,"y":100.80766141285707,"z":100},"re":-7.38151361238445,"ki":[{"qu":7,"lo":[{"qu":"a","x":135.9333956309861,"y":100.80766141285704,"z":100},{"qu":"b","x":119.41812284921312,"y":231.41806501784663,"z":100}]},{"qu":8,"lo":[{"x":91.23494648657713,"y":247.6207972947162,"z":100,"h":20.22612901510592,"v":20.75372657327976,"qu":"a"},{"x":74.11029456132434,"y":293.000554510246,"z":100,"h":14.194441637004282,"v":18.308151274247102,"qu":"b"}]}],"we":"0|-7.382|0","dr":-7.382},{"qu":8,"x":114.60381847411156,"y":366.54220888003454,"z":"100.000","fr":{"x":129.25501161697431,"y":362.69851433365824,"z":0},"cr":{"x":91.23494648657713,"y":247.6207972947162,"z":100},"re":-7.165472342922627,"ki":[{"qu":8,"lo":[{"qu":"a","x":91.23494648657714,"y":247.6207972947162,"z":100},{"qu":"b","x":73.79498018027112,"y":293.1750559883754,"z":100}]}],"we":"0|-7.165|0","dr":-7.165},{"qu":9,"x":-95.94735792039938,"y":91.3483670093259,"z":"100.000","fr":{"x":-99.80187864375239,"y":101.95724474041248,"z":0},"cr":{"x":35.05854233142271,"y":144.95137575131412,"z":100},"re":-4.5701284053641285,"ki":[{"qu":9,"lo":[{"qu":"a","x":35.0585423314227,"y":144.95137575131412,"z":100},{"qu":"b","x":34.766971159819875,"y":97.70729454484089,"z":100}]}],"we":"0|-4.570|0","dr":-4.57},{"qu":10,"x":-76.65989575122238,"y":-51.26621698074505,"z":"100.000","fr":{"x":-75.82768027165496,"y":-50.75420346232224,"z":0},"cr":{"x":-116.3672430268592,"y":14.205568573559493,"z":100},"re":0.7311388204385445,"ki":[{"qu":10,"lo":[{"qu":"a","x":-116.3672430268592,"y":14.20556857355949,"z":100},{"qu":"b","x":-47.93153678882513,"y":35.369256174474344,"z":100}]},{"qu":11,"lo":[{"x":-128.90148377315123,"y":9.329411686678437,"z":100,"h":-85.86036200795552,"v":37.73135307066202,"qu":"a"},{"x":-130.54796184419715,"y":-102.13857448324197,"z":100,"h":-128.0390406931496,"v":31.102426613172987,"qu":"b"}]},{"qu":12,"lo":[{"x":-116.5936409921089,"y":14.318304730168743,"z":100,"h":-82.99883535754044,"v":40.40723831127788,"qu":"a"},{"x":-48.83520597205896,"y":34.65488668498995,"z":100,"h":-54.639376677084755,"v":59.086036129178865,"qu":"b"}]}],"we":"0|0.731|0","dr":0.731},{"qu":11,"x":-181.21234647814472,"y":-50.04198343858938,"z":"100.000","fr":{"x":-180.55632483495748,"y":-50.61361385375362,"z":0},"cr":{"x":-128.90148377315123,"y":9.329411686678437,"z":100},"re":0.630047775547547,"ki":[{"qu":11,"lo":[{"qu":"a","x":-128.90148377315123,"y":9.32941168667844,"z":100},{"qu":"b","x":-130.66866021802446,"y":-102.25568325050575,"z":100}]}],"we":"0|0.630|0","dr":0.63},{"qu":12,"x":-3.2131431475382684,"y":-103.845665916804,"z":"100.000","fr":{"x":0.16467172066829505,"y":-100.50920792688856,"z":0},"cr":{"x":-116.5936409921089,"y":14.318304730168743,"z":100},"re":1.661185000019088,"ki":[{"qu":12,"lo":[{"qu":"a","x":-116.5936409921089,"y":14.318304730168748,"z":100},{"qu":"b","x":-48.986732359374,"y":34.60488199844575,"z":100}]}],"we":"0|1.661|0","dr":1.661},{"qu":13,"x":-0.13856680557923085,"y":-204.4432466048792,"z":"100.000","fr":{"x":1.1059825648272437,"y":-203.7761685167764,"z":0},"cr":{"x":-116.5936409921089,"y":14.318304730168743,"z":100},"re":0.32645644970238186,"ki":[{"qu":12,"lo":[{"qu":"a","x":-116.5936409921089,"y":14.318304730168734,"z":100},{"qu":"b","x":-48.50120390599139,"y":34.722669322755024,"z":100}]},{"qu":13,"lo":[{"x":14.504352646732173,"y":-148.2680624385543,"z":100,"h":174.41280645521135,"v":33.87148219295888,"qu":"a"},{"x":25.39525948775207,"y":-199.99760175635325,"z":100,"h":172.76343360013388,"v":26.382478446430508,"qu":"b"}]}],"we":"0|0.326|0","dr":0.326},{"qu":14,"x":-48.685639276206125,"y":-288.36757586686934,"z":"100.000","fr":{"x":-47.17090511878934,"y":-289.04096935472234,"z":0},"cr":{"x":14.504352646732173,"y":-148.2680624385543,"z":100},"re":0.61798187826372,"ki":[{"qu":13,"lo":[{"qu":"a","x":14.504352646732173,"y":-148.2680624385543,"z":100},{"qu":"b","x":25.52219092919892,"y":-200.10416429573826,"z":100}]},{"qu":14,"lo":[{"x":-36.14029338433535,"y":-392.7610867336804,"z":100,"h":-174.7426775798103,"v":14.226798552773486,"qu":"a"},{"x":-34.265260975375476,"y":-174.02759717917093,"z":100,"h":-168.8611993617428,"v":29.414165677559318,"qu":"b"}]},{"qu":15,"lo":[{"x":-27.687681271157466,"y":-161.9918727065198,"z":100,"h":-170.30072051479542,"v":31.320126602777126,"qu":"a"},{"x":25.10106818685154,"y":-199.44100043581832,"z":100,"h":172.82663542450757,"v":26.449283012047033,"qu":"b"}]}],"we":"0|0.618|0","dr":0.618},{"qu":15,"x":-54.59372280896688,"y":-375.88300878338214,"z":"100.000","fr":{"x":-47.652692477698295,"y":-376.6421731745319,"z":0},"cr":{"x":-27.687681271157466,"y":-161.9918727065198,"z":100},"re":1.855862413201546,"ki":[{"qu":15,"lo":[{"qu":"a","x":-27.687681271157462,"y":-161.9918727065198,"z":100},{"qu":"b","x":24.04216575336541,"y":-198.96653399484973,"z":100}]}],"we":"0|1.856|0","dr":1.856}]}];
    ]]></action>

    <plugin name="navigator" keep="true" devices="html5"
        url="%VIEWER%/plugins/navigator.js"
        leftKey = "65"
        rightKey = "68"
        forwardKey = "87"
        backwardKey = "83"
        upKey = "81"  
        downKey  = "69"
        visible="false"
        
        
        angleTolerance = "30"
        hotspotVisibility = "scene" 
        notFoundMove = "10"
        notFoundTime = "0.3"
        navigationMode = "walking"
        navigationClick = "true"
        navigationSpeed = "100"
        walkingSpeed = "1"
        walkingFriction = "0.8"
        walkRatioChange = "0.9"
        loadsceneblendtime = "0.86"
        
        
        
        
        
        
        
        editMode = "true"
    />



    <!-- 
                                                         _ 
      _____   _____ _ __ _ __   __ _ _ __   ___    _   _(_)
     / _ \ \ / / _ \ '__| '_ \ / _` | '_ \ / _ \  | | | | |
    |  __/\ V /  __/ |  | |_) | (_| | | | | (_) | | |_| | |
     \___| \_/ \___|_|  | .__/ \__,_|_| |_|\___/   \__,_|_|
                        |_|                                
    -->
     
    <plugin name="everpano_ui" keep="true" devices="html5" url=""

        vrPosition = "left"
        fullscreenPosition = "right"
        menuOpen = "0"
        menuAnimation = "1"
        showPanoTitle = "true"
        showNextPrevious = "1"
        showNPTooltips = "1"

    />


    


    <!--  
                     _             _ _               
      ___ ___  _ __ | |_ _ __ ___ | | | ___ _ __ ___ 
     / __/ _ \| '_ \| __| '__/ _ \| | |/ _ \ '__/ __|
    | (_| (_) | | | | |_| | | (_) | | |  __/ |  \__ \
     \___\___/|_| |_|\__|_|  \___/|_|_|\___|_|  |___/ 

    -->
                                                 
    <events name="navplugin_events" keep="true" webvr_onvrcontrollerbutton="navplugin_onvrcontrollerbutton()" />

    <action name="navplugin_onvrcontrollerbutton" scope="local">
        if(caller.vrbuttonindex == 1 AND caller.vrbuttonstate == 'up',
            txtadd(controllerName, 'vr_controller_' , calc(caller.vrcontroller.hand == 'left' ? 'l' : 'r'));
            plugin[navigator].makevrclick(get(controllerName));
        );
    </action>




    <!--
         _                                   _             _ 
      __| |_ __ __ _  __ _    ___ ___  _ __ | |_ _ __ ___ | |
     / _` | '__/ _` |/ _` |  / __/ _ \| '_ \| __| '__/ _ \| |
    | (_| | | | (_| | (_| | | (_| (_) | | | | |_| | | (_) | |
     \__,_|_|  \__,_|\__, |  \___\___/|_| |_|\__|_|  \___/|_|
                     |___/ 
    -->

    <!-- IF YOU WANT TO ADD ADDITIONAL DRAG CONTROLLER FOR TOUCH DEVICES -->
    <!-- WARNING !! THAT SHOULD BE ONLY USED WHEN YOU ARE IN WALKING NAVIGATION MODE -->
    <!-- IF YOU NEED TO USE IT NOT ONLY IN HANDHELD DEVICES ADJUST THE ATTRIBUTE ACCORDINGLY -->
    
    <!--

    <layer name="walkinfo_touch" keep="true" type="text" align="bottom"
        y="85"
        html="drag around[br]for walking" bgalpha="0.3" devices="handheld"
        css="color:#FFFFFF;text-align:center;" txtshadow="0 1 4 0x000000 1.0"
        vcenter="true"
        width="140" height="140" bgroundedge="180"
        ondown="dragcontrol();"
        />

    <action name="dragcontrol" scope="local">
        copy(mx,mouse.x);
        copy(my,mouse.y);
        tween(caller.alpha,0);
        asyncloop(caller.pressed,
                calc(walkaround.forward, (mouse.y - my) * -0.25);
                calc(walkaround.left,    (mouse.x - mx) * -0.25);
                copy(mx, mouse.x);
                copy(my, mouse.y);
          ,
            set(walkaround.left, 0);
            set(walkaround.forward, 0);
            tween(caller.alpha,1);
        );
    </action>

    -->




    


    <!-- 
                  _               
    __      _____| |____   ___ __ 
    \ \ /\ / / _ \ '_ \ \ / / '__|
     \ V  V /  __/ |_) \ V /| |   
      \_/\_/ \___|_.__/ \_/ |_|  

    
    webvr support 
    
    -->

    <include url="%VIEWER%/plugins/webvr.xml" />
    
    <!-- force enabled positional tracking -->
    <plugin name="webvr" postracking="true" />
    
    <!-- clear the default gamepad controls from the webvr.xml -->
    <action name="webvr_vrcontroller_gamepad_controls"></action>
    
    <!-- use depthbuffer for hotspots rendering -->
    <display depthbuffer="true" />
    

    <!-- 
      __       _ _                                              
     / _| ___ | | | _____      ___ __ ___   ___  _   _ ___  ___ 
    | |_ / _ \| | |/ _ \ \ /\ / / '_ ` _ \ / _ \| | | / __|/ _ \
    |  _| (_) | | | (_) \ V  V /| | | | | | (_) | |_| \__ \  __/
    |_|  \___/|_|_|\___/ \_/\_/ |_| |_| |_|\___/ \__,_|___/\___|

    include the followmouse tool 
    -->
    <include url="%VIEWER%/plugins/followmouse.xml" />



    <!-- 
                 _                         
      __ _ _   _| |_ ___  _ __ _   _ _ __  
     / _` | | | | __/ _ \| '__| | | | '_ \ 
    | (_| | |_| | || (_) | |  | |_| | | | |
     \__,_|\__,_|\__\___/|_|   \__,_|_| |_| 

    -->

    <!-- 
        UNCOMMENT THOSE LINES ABOVE TO HAVE AN AUTORUN FEATURE, MAKING A TRANSITION FROM PANO TO PANO
        YOU WILL NEED TO ADJUST TIME VALUES ACCORDINGLY TO YOUR NEEDS
        ALSO ADJUST IDLETIME TO DEFINE WHEN TO START THE AUTO TOUR
    -->

    <!-- 

    <events name="autoTourEvents" keep="true" 
        onidle="startAutoTour();"
        onclick="autoTourClickEvent();"
        onmousedown="autoTourClickEvent();"
    />

    <action protect="true" name="startAutoTour">

        set(autoTourRuns, true);
        nextSceneLoop(+1);
        delayedcall(autotour,5.0,startAutoTour(););

    </action>

    <action protect="true" name="stopAutoTour">

        stopdelayedcall(autotour);
        set(autoTourRuns, false);

    </action>   

    <action name="nextSceneLoop" scope="local" args="indexadd">
        
        add(newsceneindex, scene[get(xml.scene)].index, indexadd);
        sub(lastsceneindex, scene.count, 1);
        if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));
        if(newsceneindex GT lastsceneindex, set(newsceneindex,0));

        transition2scene(get(scene[get(newsceneindex)].name),null, MERGE, BLEND(1));

    </action>

    <action name="autoTourClickEvent">
        if(autoTourRuns, stopAutoTour(););
    </action>


    <action name="transition2scene">

        loadscene('%1', null, MERGE|KEEPVIEW|KEEPMOVING, BLEND(0.5));
        set(events.onkeydown, stoptween(view.tx|view.ty|view.tz);set(events.onkeydown,null); );
        tween(view.tx|view.ty|view.tz, calc('' + image.ox + '|' + image.oy + '|' + image.oz), 2, default, set(events.onkeydown,null); );
        
    </action> 

    -->




    <!-- 

                     _            _                              
      ___ ___  _ __ | |_ _____  _| |_ _ __ ___   ___ _ __  _   _ 
     / __/ _ \| '_ \| __/ _ \ \/ / __| '_ ` _ \ / _ \ '_ \| | | |
    | (_| (_) | | | | ||  __/>  <| |_| | | | | |  __/ | | | |_| |
     \___\___/|_| |_|\__\___/_/\_\\__|_| |_| |_|\___|_| |_|\__,_|
                                                                 
    contextmenu with different viewing projections 
    
    -->
    <include url="%VIEWER%/plugins/contextmenu.xml" />
    
    




    <!-- 
      __           
     / _|_ __  ___ 
    | |_| '_ \/ __|
    |  _| |_) \__ \
    |_| | .__/|___/
        |_|        

    frames/second counter 
    -->

    <!-- <include url="%VIEWER%/plugins/fps.xml" /> -->





    <action name="setInitialPosition" autorun="onstart" >

        for(set(i,0), i LT style.count, inc(i),
            indexoftxt(is_everpano3D_style, get(style[get(i)].name), 'everpano3d_');
            if(is_everpano3D_style == 0 AND style[get(i)].linkedscene == xml.scene,
                copy(view.tx, style[get(i)].ox);
                copy(view.ty, style[get(i)].oy);
                copy(view.tz, style[get(i)].oz);
            );
        );
        
    </action>




  
</krpano>